{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","backgroundColor","width","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","border","borderRadius","cursor","float","Todos","todos","map","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0adaad58.chunk.js","sourcesContent":["import Reaacat from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Todo List</h1>\r\n    <Link to=\"/\" style={linkStyle}>Home </Link>  |  <Link to=\"/about\" style={linkStyle}> About</Link>\r\n        </header>//instead of <a> tag <Link> is used in JSX\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component{\r\n    \r\n       \r\n        getStyle = () =>{\r\n            return{\r\n                backgroundColor: '#f4f4f4',\r\n                width: '100%',\r\n                padding: '10px',\r\n                borderBottom: '1px #ccc dotted',\r\n                textDecoration: this.props.todo.completed ?\r\n                'line-through' : 'none',\r\n\r\n            }//if todo is completed then you will see a line through in the statement\r\n        }\r\n\r\n\r\n   render(){\r\n        const { id, title } = this.props.todo;\r\n        return(\r\n            //for styling we can use <div style={{backgroundColor: '#f4f4f4'}} double braces of inine elements>\r\n            //or we can use variables like <div style={itemStyle}>\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                <input type=\"checkbox\" onChange = {this.props.markComplete.bind(this, id)} />{' '}\r\n                {title}\r\n                <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>x</button>\r\n                </p>\r\n            </div>\r\n        )//to add space {' '} is used\r\n    }\r\n}\r\n\r\n//PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\n//itemStyle is declared here\r\n//const itemStyle = {\r\n//    backgroundColor: '#f4f4f4'\r\n//}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '50%',\r\n    padding: '3px 0.5%',\r\n    cursor: 'pointer',\r\n    float: 'right',\r\n    width: '3%'\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport Proptypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  render(){\r\n  return this.props.todos.map((todo) => (\r\n  <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n  )) ;\r\n}\r\n}\r\n\r\n//PropTypes\r\nTodos.propTypes = {\r\n    todos: Proptypes.array.isRequired,\r\n    markComplete: Proptypes.func.isRequired,\r\n    delTodo: Proptypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class AddTodo extends Component {\r\n\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);//title state is passed\r\n        this.setState({title: ''});//to make title state empty\r\n    }\r\n\r\n    render() {\r\n      return(\r\n         <form onSubmit = {this.onSubmit}\r\n               style={{display:'flex'}}>\r\n            <input type=\"text\" \r\n                   name=\"title\" \r\n                   placeholder=\"Add Todo...\" \r\n                   style={{flex: '10', padding:'10px'}}\r\n                   onChange={this.onChange}\r\n            /> \r\n            <input type=\"submit\" \r\n                   value=\"Submit\" \r\n                   className=\"btn\" \r\n                   style={{flex: '1'}}\r\n            /> \r\n         </form>\r\n      );\r\n    }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0. It is a part of a React crash course.</p>\r\n        </React.Fragment>//instead of div you can use this\r\n    )\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport {v4 as uuidv4} from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n   todos: [\n      /* {\n        id: uuidv4(),\n        title: 'Take out the trash',\n        completed: false\n      },\n      {\n        id: uuidv4(),\n        title: 'Dinner',\n        completed: false\n      },\n      {\n        id: uuidv4(),\n        title: 'Meeting with boss',\n        completed: false\n      }*/\n\n    ]\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res=> this.setState({ todos:res.data}))\n  }//axios is used to import all the todos from json placeholder\n  //?_limit set the size of array to 10\n\n  //Toggle Complete\n  markComplete = (id) => {\n    this.setState({todos: this.state.todos.map(todo =>{\n      if(todo.id === id)\n      {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })});\n  }\n\n  //Delete Todo\n  delTodo = (id) =>{\n     \n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res=> this.setState({todos: [...this.state.todos.filter(todo=>todo.id != id)]}))\n    \n    //without using jsonplaceholder\n    //this.setState({todos: [...this.state.todos.filter(todo=>todo.id != id)]})\n  }//... -> spread operator to get all the elements of array\n\n\n\n  //Add Todo\n  addTodo = (title) => {\n    \n    //without using json placeholder\n    /*const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false\n    }*/\n\n    //POST to server\n    axios.post('https://jsonplaceholder.typicode.com/todos/',{\n      title,\n      completed: false\n    })\n    .then(res =>this.setState({todos: [...this.state.todos, res.data]}))\n  }\n\n  render(){\n  return (\n   <Router>\n    <div className=\"App\">\n      <div className=\"container\">\n      <Header />\n      <Route exact path=\"/\" render={props => (\n        <React.Fragment>\n          <AddTodo addTodo={this.addTodo}/>\n          <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n        </React.Fragment>\n      )} />\n      <Route path=\"/about\" component={About} />\n      </div>\n    </div>\n   </Router>\n  );//\"/\"will route to AddTodo and todos\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}